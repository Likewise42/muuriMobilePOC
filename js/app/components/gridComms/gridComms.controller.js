"use strict";

define(['../../constants', '../../lifecycleHelper'], function (constants, LifecycleHelper) {
  'use strict';

  GridCommsController.controllerName = 'muuridemo.components.gridComms.controller';
  GridCommsController.$inject = ['muuridemo.services.smartLog', 'muuridemo.services.gridCommunications'];

  function GridCommsController(log, comms) {
    var _this = this;

    var lifecycleId = 'GridCommsController$instance';
    var lifecycle = new LifecycleHelper();

    this.$onInit = function () {
      log.info('Grid Comms Initialized');
      comms.announce(_this.grid.gridName || 'anonymous', constants.GRID_EVENTS.INITIALIZED, {
        grid: _this.grid,
        gridType: _this.grid.gridType || 'unknown'
      });
      var globalSubscription = comms.pipelines.global.subscribe(function (next) {
        //if the grids should be linked
        if (next.gridName === _this.grid.gridName) {
          //if this grid is a source grid
          if (_this.grid.gridType === constants.GRID_TYPES.SOURCE_GRID) {
            _this.grid.availableGrids.push(next.eventData.grid.grid); //if this grid is a display grid

          } else if (_this.grid.gridType === constants.GRID_TYPES.DISPLAY_GRID) {
            next.eventData.grid.availableGrids.push(_this.grid.grid);
          }
        }
      });
      lifecycle.register(lifecycleId, function () {
        globalSubscription.unsubscribe();
      });
    };

    this.$onDestroy = function () {
      lifecycle.cleanup(lifecycleId);
    };
  }

  return GridCommsController;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2h0bWwvanMvYXBwL2NvbXBvbmVudHMvZ3JpZENvbW1zL2dyaWRDb21tcy5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImRlZmluZSIsImNvbnN0YW50cyIsIkxpZmVjeWNsZUhlbHBlciIsIkdyaWRDb21tc0NvbnRyb2xsZXIiLCJjb250cm9sbGVyTmFtZSIsIiRpbmplY3QiLCJsb2ciLCJjb21tcyIsImxpZmVjeWNsZUlkIiwibGlmZWN5Y2xlIiwiJG9uSW5pdCIsImluZm8iLCJhbm5vdW5jZSIsImdyaWQiLCJncmlkTmFtZSIsIkdSSURfRVZFTlRTIiwiSU5JVElBTElaRUQiLCJncmlkVHlwZSIsImdsb2JhbFN1YnNjcmlwdGlvbiIsInBpcGVsaW5lcyIsImdsb2JhbCIsInN1YnNjcmliZSIsIm5leHQiLCJHUklEX1RZUEVTIiwiU09VUkNFX0dSSUQiLCJhdmFpbGFibGVHcmlkcyIsInB1c2giLCJldmVudERhdGEiLCJESVNQTEFZX0dSSUQiLCJyZWdpc3RlciIsInVuc3Vic2NyaWJlIiwiJG9uRGVzdHJveSIsImNsZWFudXAiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQyxDQUFDLGlCQUFELEVBQW9CLHVCQUFwQixDQUFELEVBQStDLFVBQVVDLFNBQVYsRUFBcUJDLGVBQXJCLEVBQXNDO0FBQ3ZGOztBQUVBQyxFQUFBQSxtQkFBbUIsQ0FBQ0MsY0FBcEIsR0FBcUMsMkNBQXJDO0FBQ0FELEVBQUFBLG1CQUFtQixDQUFDRSxPQUFwQixHQUE4QixDQUFDLDZCQUFELEVBQWdDLHVDQUFoQyxDQUE5Qjs7QUFFQSxXQUFTRixtQkFBVCxDQUE2QkcsR0FBN0IsRUFBa0NDLEtBQWxDLEVBQXlDO0FBQUE7O0FBRXJDLFFBQU1DLFdBQVcsR0FBRyw4QkFBcEI7QUFDQSxRQUFNQyxTQUFTLEdBQUcsSUFBSVAsZUFBSixFQUFsQjs7QUFFQSxTQUFLUSxPQUFMLEdBQWUsWUFBTTtBQUNqQkosTUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVMsd0JBQVQ7QUFDQUosTUFBQUEsS0FBSyxDQUFDSyxRQUFOLENBQWUsS0FBSSxDQUFDQyxJQUFMLENBQVVDLFFBQVYsSUFBc0IsV0FBckMsRUFBa0RiLFNBQVMsQ0FBQ2MsV0FBVixDQUFzQkMsV0FBeEUsRUFBcUY7QUFDakZILFFBQUFBLElBQUksRUFBRSxLQUFJLENBQUNBLElBRHNFO0FBRWpGSSxRQUFBQSxRQUFRLEVBQUUsS0FBSSxDQUFDSixJQUFMLENBQVVJLFFBQVYsSUFBc0I7QUFGaUQsT0FBckY7QUFLQSxVQUFNQyxrQkFBa0IsR0FBR1gsS0FBSyxDQUFDWSxTQUFOLENBQWdCQyxNQUFoQixDQUF1QkMsU0FBdkIsQ0FBaUMsVUFBQ0MsSUFBRCxFQUFVO0FBQ2xFO0FBQ0EsWUFBSUEsSUFBSSxDQUFDUixRQUFMLEtBQWtCLEtBQUksQ0FBQ0QsSUFBTCxDQUFVQyxRQUFoQyxFQUEwQztBQUV0QztBQUNBLGNBQUksS0FBSSxDQUFDRCxJQUFMLENBQVVJLFFBQVYsS0FBdUJoQixTQUFTLENBQUNzQixVQUFWLENBQXFCQyxXQUFoRCxFQUE2RDtBQUN6RCxZQUFBLEtBQUksQ0FBQ1gsSUFBTCxDQUFVWSxjQUFWLENBQXlCQyxJQUF6QixDQUE4QkosSUFBSSxDQUFDSyxTQUFMLENBQWVkLElBQWYsQ0FBb0JBLElBQWxELEVBRHlELENBR3pEOztBQUNILFdBSkQsTUFJTyxJQUFJLEtBQUksQ0FBQ0EsSUFBTCxDQUFVSSxRQUFWLEtBQXVCaEIsU0FBUyxDQUFDc0IsVUFBVixDQUFxQkssWUFBaEQsRUFBOEQ7QUFDakVOLFlBQUFBLElBQUksQ0FBQ0ssU0FBTCxDQUFlZCxJQUFmLENBQW9CWSxjQUFwQixDQUFtQ0MsSUFBbkMsQ0FBd0MsS0FBSSxDQUFDYixJQUFMLENBQVVBLElBQWxEO0FBQ0g7QUFDSjtBQUNKLE9BYjBCLENBQTNCO0FBZUFKLE1BQUFBLFNBQVMsQ0FBQ29CLFFBQVYsQ0FBbUJyQixXQUFuQixFQUFnQyxZQUFNO0FBQ2xDVSxRQUFBQSxrQkFBa0IsQ0FBQ1ksV0FBbkI7QUFDSCxPQUZEO0FBR0gsS0F6QkQ7O0FBMkJBLFNBQUtDLFVBQUwsR0FBa0IsWUFBTTtBQUNwQnRCLE1BQUFBLFNBQVMsQ0FBQ3VCLE9BQVYsQ0FBa0J4QixXQUFsQjtBQUNILEtBRkQ7QUFHSDs7QUFFRCxTQUFPTCxtQkFBUDtBQUNILENBNUNLLENBQU4iLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoWycuLi8uLi9jb25zdGFudHMnLCAnLi4vLi4vbGlmZWN5Y2xlSGVscGVyJ10sIGZ1bmN0aW9uIChjb25zdGFudHMsIExpZmVjeWNsZUhlbHBlcikge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIEdyaWRDb21tc0NvbnRyb2xsZXIuY29udHJvbGxlck5hbWUgPSAnbXV1cmlkZW1vLmNvbXBvbmVudHMuZ3JpZENvbW1zLmNvbnRyb2xsZXInO1xyXG4gICAgR3JpZENvbW1zQ29udHJvbGxlci4kaW5qZWN0ID0gWydtdXVyaWRlbW8uc2VydmljZXMuc21hcnRMb2cnLCAnbXV1cmlkZW1vLnNlcnZpY2VzLmdyaWRDb21tdW5pY2F0aW9ucyddO1xyXG5cclxuICAgIGZ1bmN0aW9uIEdyaWRDb21tc0NvbnRyb2xsZXIobG9nLCBjb21tcykge1xyXG5cclxuICAgICAgICBjb25zdCBsaWZlY3ljbGVJZCA9ICdHcmlkQ29tbXNDb250cm9sbGVyJGluc3RhbmNlJztcclxuICAgICAgICBjb25zdCBsaWZlY3ljbGUgPSBuZXcgTGlmZWN5Y2xlSGVscGVyKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy4kb25Jbml0ID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBsb2cuaW5mbygnR3JpZCBDb21tcyBJbml0aWFsaXplZCcpO1xyXG4gICAgICAgICAgICBjb21tcy5hbm5vdW5jZSh0aGlzLmdyaWQuZ3JpZE5hbWUgfHwgJ2Fub255bW91cycsIGNvbnN0YW50cy5HUklEX0VWRU5UUy5JTklUSUFMSVpFRCwge1xyXG4gICAgICAgICAgICAgICAgZ3JpZDogdGhpcy5ncmlkLFxyXG4gICAgICAgICAgICAgICAgZ3JpZFR5cGU6IHRoaXMuZ3JpZC5ncmlkVHlwZSB8fCAndW5rbm93bidcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBnbG9iYWxTdWJzY3JpcHRpb24gPSBjb21tcy5waXBlbGluZXMuZ2xvYmFsLnN1YnNjcmliZSgobmV4dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgLy9pZiB0aGUgZ3JpZHMgc2hvdWxkIGJlIGxpbmtlZFxyXG4gICAgICAgICAgICAgICAgaWYgKG5leHQuZ3JpZE5hbWUgPT09IHRoaXMuZ3JpZC5ncmlkTmFtZSkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvL2lmIHRoaXMgZ3JpZCBpcyBhIHNvdXJjZSBncmlkXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZ3JpZC5ncmlkVHlwZSA9PT0gY29uc3RhbnRzLkdSSURfVFlQRVMuU09VUkNFX0dSSUQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ncmlkLmF2YWlsYWJsZUdyaWRzLnB1c2gobmV4dC5ldmVudERhdGEuZ3JpZC5ncmlkKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgdGhpcyBncmlkIGlzIGEgZGlzcGxheSBncmlkXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmdyaWQuZ3JpZFR5cGUgPT09IGNvbnN0YW50cy5HUklEX1RZUEVTLkRJU1BMQVlfR1JJRCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0LmV2ZW50RGF0YS5ncmlkLmF2YWlsYWJsZUdyaWRzLnB1c2godGhpcy5ncmlkLmdyaWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBsaWZlY3ljbGUucmVnaXN0ZXIobGlmZWN5Y2xlSWQsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGdsb2JhbFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLiRvbkRlc3Ryb3kgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGxpZmVjeWNsZS5jbGVhbnVwKGxpZmVjeWNsZUlkKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBHcmlkQ29tbXNDb250cm9sbGVyO1xyXG59KTsiXX0=
